{"version":3,"sources":["Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","Form","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","description","setDescription","classes","className","noValidate","autoComplete","onSubmit","e","preventDefault","emailjs","sendForm","process","target","then","result","console","log","text","alert","error","reset","handleSubmit","TextField","onChange","id","label","variant","style","margin","name","multiline","Button","type","fullWidth","color","container","justifyContent","App","CssBaseline","AppBar","position","Toolbar","Typography","Container","maxWidth","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aead73a3.chunk.js","sourcesContent":["import { makeStyles, TextField, Button } from '@material-ui/core'\r\nimport emailjs from 'emailjs-com'\r\nimport { useState } from 'react';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: 500,\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function Form() {\r\n    const [firstname, setFirstname] = useState(null);\r\n    const [lastname, setLastname] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [description, setDescription] = useState(null);\r\n    const classes = useStyle();\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (firstname && lastname && email && password && description) {\r\n            emailjs.sendForm('' + process.env.REACT_APP_SERVICE_ID, '' + process.env.REACT_APP_TEMPLATE_ID, e.target, '' + process.env.REACT_APP_USER_ID)\r\n                .then((result) => {\r\n                    console.log(result.text);\r\n                    alert(result.text + \"! Feedback Capture\")\r\n                }, (error) => {\r\n                    console.log(error.text);\r\n                });\r\n\r\n        }\r\n        else {\r\n            alert(\"Enter All Fields\")\r\n        }\r\n        setFirstname(null)\r\n        setLastname(null)\r\n        setEmail(null)\r\n        setPassword(null)\r\n        setDescription(null)\r\n\r\n        e.target.reset();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={(e) => (handleSubmit(e))}>\r\n                <TextField onChange={(e) => { setFirstname(e) }} id=\"outlined-basic\" label=\"FirstName\" variant=\"outlined\" style={{ width: 500, margin: 10 }} name='firstname' />\r\n                <TextField onChange={(e) => { setLastname(e) }} id=\"outlined-basic\" label=\"LastName\" variant=\"outlined\" style={{ width: 500, margin: 10 }} name='lastname' />\r\n                <TextField onChange={(e) => { setEmail(e) }} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" style={{ width: 500, margin: 10 }} name='email' />\r\n                <TextField onChange={(e) => { setPassword(e) }} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" style={{ width: 500, margin: 10 }} name='password' />\r\n                <TextField onChange={(e) => { setDescription(e) }} id=\"outlined-basic\" label=\"Description\" multiline variant=\"outlined\" style={{ width: 500, margin: 10 }} name='description' />\r\n                <Button style={{ margin: 10 }} type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n                    Submit Details\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import Container from '@material-ui/core/Container'\nimport AppBar from '@material-ui/core/AppBar'\nimport { makeStyles, Toolbar, Typography } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Form from \"./Components/Form\"\n// import Test from './Components/test'\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    marginTop: 10,\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n}))\n\nfunction App() {\n  const classes = useStyle();\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\" >\n            Form\n        </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <Typography variant=\"h5\" color=\"inherit\" style={{ textAlign: \"center\" }} >\n          Enter Details\n        </Typography>\n        <Form />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}